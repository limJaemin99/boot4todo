<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="org.iclass.dao.TodoMapper">
 
 	 <select id="getTime" resultType="String">
 	 	select sysdate from dual
 	 </select>
 
 	<insert id="insert" parameterType="org.iclass.dto.TodoDto">
 		insert into 
 			tbl_todo(tno,title,dueDate,writer) 
 		values
 			(todoSeq.nextval,#{title},#{dueDate},#{writer})
 	</insert>
 	<select id="selectAll" resultType="org.iclass.dto.TodoDto">
 		select * 
 		from 
 			tbl_todo 
 		order by
 			tno desc
 	</select>
 	<select id="selectOne" resultType="org.iclass.dto.TodoDto">
 		select * 
 		from 
 			tbl_todo 
 		where 
 			tno=#{tno}
 	</select>
 	
 	<delete id="delete" parameterType="long">
 		delete from tbl_todo where tno=#{tno}
 	</delete>
 	
 	<update id="update" parameterType="org.iclass.dto.TodoDto">
 		update tbl_todo
 		set
 			title=#{title} , dueDate = #{dueDate}, finished=#{finished}
 		where
 			tno = #{tno}
 	</update>
 	
 	<select id="selectList" resultType="org.iclass.dto.TodoDto">
 		select * 
 		from
	 		(select rownum r, f.* 
	 		from 
	 			(select * from tbl_todo order by tno desc) f)
	 	where r between #{start} and #{end}		
 	</select>
 	
 	<select id="getCount" resultType="long">
 		select count(*) from tbl_todo
 	</select>

	<sql id="search">
		<!-- 아래 조건에 따라 만들어진 조건식이 있을때만 where 를 추가하는 동작 -->
		<where>
			<!-- types 파라미터가 있으면 쿼리를 생성한다. types 는 배열이므로 foreach 태그로 하나씩 가져다가 if test 실행한다. -->
			<!--
				types 예시 : {"t","c"} , {"t","w","c"} , {"t","w"} , {"t"} , {"w"} , {"c"} 를
				하나씩 요소를 가져가 type 변수에 저장하고, 비교 조건식에 따라 if 태그 안의 문자열을 추가한다.
				※ 연결 기호는 OR
			-->
			<if test="types != null and types.length > 0">
				<foreach collection="types" item="type" open="(" close=")" separator=" OR ">
					<if	test="type=='t'.toString()"> title like '%' || #{keyword} || '%' </if>
					<if	test="type=='w'.toString()"> writer like '%' || #{keyword} || '%' </if>
					<if	test="type=='c'.toString()"> content like '%' || #{keyword} || '%' </if>
				</foreach>
			</if>
			<!-- 만약 날짜 타입을 이용해서 기간에 대한 조회를 구현한다면 필요할 수 있으므로 추가한다. -->
			<if test="from != null and to != null">
				<trim prefix="and">	<!-- 앞의 검색 조건 여부에 따라 and 추가 -->
					createdAt between #{from} and #{to}
				</trim>
			</if>
		</where>
	</sql>

 </mapper>